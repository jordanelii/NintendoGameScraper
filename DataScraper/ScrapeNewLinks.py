import pandas as pd
import DataScraper

# Scrapes new links
# Before running this function, you must run linkscraper.py at least once
# This file will initate the parsing of links that have not been parsed yet. This is fast and doesn't update older links.
# Start by using ScrapeEveryLink.py and then to update the csv file use ScrapeNewLinks.py
# new_link_data_scraper() checks the game_links.csv file generated by linkscraper.py for game links that have not been analyzed yet. It then scrapes the data for those links, appends it to the end of the existing dataframe, and updates the complete_game_data.csv file

# Scrape only data for links that haven't been scraped yet
def new_link_data_scraper():
    game_link_df = pd.read_csv('../game_links.csv')
    game_link_list = []
    df_header = ['Name', 'Platform', 'MSRP', 'Buy Digital', 'Buy Physical', 'Demo Available', 'DLC Available', 'Publisher', 'Developer', 'ESRB', 'Release Date', 'No. of Players', 'Rom File Size', 'Switch Online Play', 'Switch Online Save', 'Switch Online App']
    category_name_list = sorted(DataScraper.category_parser())
    df_header.extend(category_name_list)
    df_header.extend(['Store Link', 'Official Site', 'Time Data Retrieved (UTC)'])
    game_data_df = pd.read_csv('../complete_game_data.csv')
    analyzed_links_s = game_data_df['Store Link']
    game_data_extension_list = []
    for platform in game_link_df:
        game_link_processed = game_link_df[platform].dropna()
        for link in game_link_processed:
            if link not in analyzed_links_s.values:
                attempts = 1
                link_data_dict = DataScraper.page_parser(link, category_name_list)
                print('\n \n')
                while link_data_dict['Name'] == 'ERROR' and attempts <= 10:
                    print("ATTEMPT: ", attempts)
                    attempts += 1
                    link_data_dict = DataScraper.page_parser(url, category_name_list)
                if attempts == 11:
                    print('ERROR, failed but appended')
                else:
                    pass
                game_data_extension_list.append(link_data_dict)
    game_data_extension_df = pd.DataFrame.from_dict(game_data_extension_list)
    print(len(game_data_extension_list), 'games added')
    game_data_df = game_data_df.append(game_data_extension_df, ignore_index=True, sort=False)
    ordered_game_data_df = game_data_df[df_header]
    ordered_game_data_df.to_csv('../complete_game_data.csv', index=False)
    print('---UPDATED complete_game_data.csv---')


new_link_data_scraper()